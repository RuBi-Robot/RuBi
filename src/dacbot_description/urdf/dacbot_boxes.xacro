<?xml version="1.0"?>

<robot name="dacbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!-- Constants -->
	<xacro:property name="PI" value="3.1415926535897931"/>
	<xacro:property name="DEG_TO_RAD" value="${PI/180}"/>

	<!-- ROS -->
	<xacro:property name="update_rate" value="10"/>
	<xacro:property name="robot_name" value="dacbot"/>

  <!-- Robot configuration: Miscellaneous -->
  <xacro:property name="robot_floating" value="0"/>

	<!-- Robot configuration: Transmission -->
	<xacro:property name="max_real_motor_torque" value="1.0787315"/> <!-- In N*m -->

  <!-- Robot configuration: Geometry 
    Width = X axis
    Length = Y axis
    Height = Z axis
  -->
  <xacro:property name="scale" value="1" />
  <xacro:property name="minimum_intertia" value="0.002" /> <!-- <0.001 doesn't work -->

	<xacro:property name="bodyWidth" value="${0.085*scale}" />
	<xacro:property name="bodyLength" value="${0.08*scale}" />
	<xacro:property name="bodyHeight" value="${0.065*scale}" />
	<xacro:property name="bodyMass" value="${0.45*scale}" />

	<xacro:property name="weightWidth" value="${0.05*scale}" />
	<xacro:property name="weightLength" value="${0.07*scale}" />
	<xacro:property name="weightHeight" value="${0.025*scale}" />
	<xacro:property name="weightMass" value="${0.50*scale}" />

	<xacro:property name="upperLegWidth" value="${0.015*scale}" />
	<xacro:property name="upperLegLength" value="${0.015*scale}" />
	<xacro:property name="upperLegHeight" value="${0.142*scale}" />
	<xacro:property name="upperLegMass" value="${0.2*scale}" />
  <xacro:property name="upperLegLimitUpperPosition" value="30" />
  <xacro:property name="upperLegLimitLowerPosition" value="-30" />
  <xacro:property name="upperLegLimitVelocity" value="10" />
  <xacro:property name="upperLegLimitEffort" value="10" />
  <xacro:property name="upperLegDamping" value="0.7" />

	<xacro:property name="lowerLegWidth" value="${0.015*scale}" />
	<xacro:property name="lowerLegLength" value="${0.015*scale}" />
	<xacro:property name="lowerLegHeight" value="${0.125*scale}" />
	<xacro:property name="lowerLegMass" value="${0.08*scale}" />
  <xacro:property name="lowerLegLimitUpperPosition" value="0" />
  <xacro:property name="lowerLegLimitLowerPosition" value="-150" />
  <xacro:property name="lowerLegLimitVelocity" value="10" />
  <xacro:property name="lowerLegLimitEffort" value="10" />
  <xacro:property name="lowerLegDamping" value="0.7" />

	<xacro:property name="footWidth" value="${0.015*scale}" />
	<xacro:property name="footLength" value="${0.050*scale}" />
	<xacro:property name="footHeight" value="${0.008*scale}" />
	<xacro:property name="footMass" value="${0.01*scale}" />
  <xacro:property name="footLimitUpperPosition" value="0" />
  <xacro:property name="footLimitLowerPosition" value="0" />
  <xacro:property name="footLimitVelocity" value="10" />
  <xacro:property name="footLimitEffort" value="10" />
  <xacro:property name="footDamping" value="0.7" />

	<xacro:property name="legDistFromCenter" value="${0.015*scale}" />

	<xacro:property name="footAnklePos" value="${0.015*scale}" />
	<xacro:property name="legAnklePos" value="${0*scale}" />
	<xacro:property name="lowerKneePos" value="${0.12*scale}" />
	<xacro:property name="upperKneePos" value="${0.02*scale}" />
	<xacro:property name="legHipPos" value="${0.132*scale}" />
	<xacro:property name="bodyHipHeight" value="${0.01*scale}" />
	<xacro:property name="bodyHipWidth" value="${0.025*scale}" />

	<xacro:property name="massJointBodyDepth" value="${0.07*scale}" />
	<xacro:property name="massJointBodyHeight" value="${0.055*scale}" />
	<xacro:property name="massJointMassDepth" value="${0.065*scale}" />
	<xacro:property name="massJointMassHeigth" value="${0.007*scale}" />

	<xacro:property name="armLength" value="${0.6*scale}" />
	<xacro:property name="armOffset" value="${0.025*scale}" />


	<!-- Import Gazebo customizations and colors-->
	<xacro:include filename="$(find dacbot_description)/urdf/dacbot.gazebo" />
	<xacro:include filename="$(find dacbot_description)/urdf/colors.xacro" />


	<!-- 
		Macros
	 -->

	 <!-- Box Macro! 
	<xacro:create_box name="" origin_x="" origin_y="" origin_z="" r="" p="" y="" width="" length="" height="" mass=""/>
	 -->
	<xacro:macro name="create_box" params="name origin_x origin_y origin_z r p y width length height mass">

		<!-- Set the minimum intertia -->
		<xacro:property name="ixx" value="${minimum_intertia}" />
		<xacro:if value="${mass / 12.0 * (length*length + height*height) > 0.01}">
			<xacro:property name="ixx" value="${mass / 12.0 * (length*length + height*height)}" />
		</xacro:if>

		<xacro:property name="iyy" value="${minimum_intertia}" />
		<xacro:if value="${mass / 12.0 * (length*length + height*height) > 0.01}">
			<xacro:property name="iyy" value="${mass / 12.0 * (length*length + height*height)}" />
		</xacro:if>

		<xacro:property name="izz" value="${minimum_intertia}" />
		<xacro:if value="${mass / 12.0 * (length*length + height*height) > 0.01}">
			<xacro:property name="izz" value="${mass / 12.0 * (length*length + height*height)}" />
		</xacro:if>

		<!-- Creates the link -->
		<link name="${name}">
			<collision>
				<origin xyz="${origin_x} ${origin_y} ${origin_z}" rpy="${r} ${p} ${y}"/>
				<geometry>
					<box size="${width} ${length} ${height}" />
				</geometry>
			</collision>

			<visual>
				<origin xyz="${origin_x} ${origin_y} ${origin_z}" rpy="${r} ${p} ${y}"/>
				<geometry>
					<box size="${width} ${length} ${height}" />
				</geometry>
				<material name="orange"/>
			</visual>

			<inertial>
				<origin xyz="${origin_x} ${origin_y} ${origin_z}" rpy="${r} ${p} ${y}"/>
				<mass value="${mass}"/>
				<inertia
					ixx="${ixx}" ixy="0.0" ixz="0.0" 
					iyy="${iyy}" iyz="0.0" 
					izz="${izz}"/>
			</inertial>
		</link>
	</xacro:macro>



	<!-- 
		World
	-->
	<!-- <link name="dacbot_global"/> -->

	<!-- 
		Left Leg
	-->

	<!-- Left Foot -->
	<xacro:create_box name="left_foot" origin_x="${footHeight/2}" origin_y="${footLength/2 - footAnklePos}" origin_z="0" r="0" p="${-PI/2}" y="0" width="${footWidth}" length="${footLength}" height="${footHeight}" mass="${footMass}"  />

	<!-- Left Lower Leg -->
	<xacro:create_box name="left_lower_leg" origin_x="${lowerLegHeight/2}" origin_y="0" origin_z="0" r="0" p="${-PI/2}" y="0" width="${lowerLegWidth}" length="${lowerLegLength}" height="${lowerLegHeight}" mass="${lowerLegMass}"  />

	<!-- Left Upper Leg -->
	<xacro:create_box name="left_upper_leg" origin_x="${upperLegHeight/2}" origin_y="0" origin_z="0" r="0" p="${-PI/2}" y="0" width="${upperLegWidth}" length="${upperLegLength}" height="${upperLegHeight}" mass="${upperLegMass}"   />


	<!-- 
		Right Leg
	-->
	<!-- Right Foot -->
	<xacro:create_box name="right_foot" origin_x="${footHeight/2}" origin_y="${footLength/2 - footAnklePos}" origin_z="0" r="0" p="${-PI/2}" y="0" width="${footWidth}" length="${footLength}" height="${footHeight}" mass="${footMass}"   />

	<!-- Right Lower Leg -->
	<xacro:create_box name="right_lower_leg" origin_x="${lowerLegHeight/2}" origin_y="0" origin_z="0" r="0" p="${-PI/2}" y="0" width="${lowerLegWidth}" length="${lowerLegLength}" height="${lowerLegHeight}" mass="${lowerLegMass}"   />

	<!-- Right Upper Leg -->
	<xacro:create_box name="right_upper_leg" origin_x="${upperLegHeight/2}" origin_y="0" origin_z="0" r="0" p="${-PI/2}" y="0" width="${upperLegWidth}" length="${upperLegLength}" height="${upperLegHeight}" mass="${upperLegMass}"   />


	<!-- 
		Body
	-->
	<xacro:create_box name="body" origin_x="0" origin_y="0" origin_z="${bodyHeight/2}" r="0" p="0" y="0" width="${bodyWidth}" length="${bodyLength}" height="${bodyHeight}" mass="${bodyMass}"  />

	<!-- 
		Joints 
	-->
  <link name="world"/>

<!--   <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="body"/>
    <origin xyz="0 0 ${(footHeight + lowerLegHeight + upperLegHeight)*1.1}" rpy="0 0 0"/>
  </joint>  -->


	<joint name="left_hip" type="revolute">
		<parent link="body"/>
		<child link="left_upper_leg"/>
		<origin xyz="${-legDistFromCenter} 0 0" rpy="0 ${PI/2} 0"/>
		<axis xyz="0 0 1"/>
		<limit effort="${upperLegLimitEffort}" velocity="${upperLegLimitVelocity}" lower="${upperLegLimitLowerPosition*DEG_TO_RAD}" upper="${upperLegLimitUpperPosition*DEG_TO_RAD}" />
		<dynamics damping="${upperLegDamping}"/>
	</joint> 

	<joint name="left_knee" type="revolute">
		<parent link="left_upper_leg"/>
		<child link="left_lower_leg"/>
		<origin xyz="${upperLegHeight} 0 0" rpy="0 0 0"/>
		<axis xyz="0 0 1"/>
		<limit effort="${lowerLegLimitEffort}" velocity="${lowerLegLimitVelocity}" lower="${lowerLegLimitLowerPosition*DEG_TO_RAD}" upper="${lowerLegLimitUpperPosition*DEG_TO_RAD}" />
		<dynamics damping="${lowerLegDamping}"/>
	</joint>

	<joint name="left_ankle" type="revolute">
		<parent link="left_lower_leg"/>
		<child link="left_foot"/>
		<origin xyz="${lowerLegHeight} 0 0" rpy="0 0 0"/>
		<axis xyz="0 0 1"/>
		<limit effort="${footLimitEffort}" velocity="${footLimitVelocity}" lower="${footLimitLowerPosition}" upper="${footLimitUpperPosition}" />
		<dynamics damping="${footDamping}"/>
	</joint> 

	<joint name="right_hip" type="revolute">
		<parent link="body"/>
		<child link="right_upper_leg"/>
		<origin xyz="${legDistFromCenter} 0 0" rpy="0 ${PI/2} 0"/>
		<axis xyz="0 0 1"/>
    <limit effort="${upperLegLimitEffort}" velocity="${upperLegLimitVelocity}" lower="${upperLegLimitLowerPosition*DEG_TO_RAD}" upper="${upperLegLimitUpperPosition*DEG_TO_RAD}" />
    <dynamics damping="${upperLegDamping}"/>
	</joint> 

	<joint name="right_knee" type="revolute">
		<parent link="right_upper_leg"/>
		<child link="right_lower_leg"/>
		<origin xyz="${upperLegHeight} 0 0" rpy="0 0 0"/>
		<axis xyz="0 0 1"/>
    <limit effort="${lowerLegLimitEffort}" velocity="${lowerLegLimitVelocity}" lower="${lowerLegLimitLowerPosition*DEG_TO_RAD}" upper="${lowerLegLimitUpperPosition*DEG_TO_RAD}" />
		<dynamics damping="${lowerLegDamping}"/>
	</joint>

	<joint name="right_ankle" type="revolute">
		<parent link="right_lower_leg"/>
		<child link="right_foot"/>
		<origin xyz="${lowerLegHeight} 0 0" rpy="0 0 0"/>
		<axis xyz="0 0 1"/>
		<limit effort="${footLimitEffort}" velocity="${footLimitVelocity}" lower="${footLimitLowerPosition}" upper="${footLimitUpperPosition}" />
    <dynamics damping="${footDamping}"/>
	</joint> 

	<transmission name="left_hip_trans">
		<type>transmission_interface/SimpleTransmission</type>
			<joint name="left_hip">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="left_hip_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>${max_real_motor_torque}</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="left_knee_trans">
		<type>transmission_interface/SimpleTransmission</type>
			<joint name="left_knee">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="left_knee_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>${max_real_motor_torque}</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="left_ankle_trans">
		<type>transmission_interface/SimpleTransmission</type>
			<joint name="left_ankle">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="left_ankle_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>${max_real_motor_torque}</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="right_hip_trans">
		<type>transmission_interface/SimpleTransmission</type>
			<joint name="right_hip">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="right_hip_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>${max_real_motor_torque}</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="right_knee_trans">
		<type>transmission_interface/SimpleTransmission</type>
			<joint name="right_knee">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="right_knee_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>${max_real_motor_torque}</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="right_ankle_trans">
		<type>transmission_interface/SimpleTransmission</type>
			<joint name="right_ankle">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="right_ankle_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>${max_real_motor_torque}</mechanicalReduction>
		</actuator>
	</transmission>








	<!-- Rotational robot holder -->
  <xacro:property name="rotational_robot_holder_base_length_extra" value="0" />
  <xacro:if value="${robot_floating is 1}">
    <xacro:property name="rotational_robot_holder_base_length_extra" value="0.1" />
  </xacro:if>
  <xacro:property name="rotational_robot_holder_base_length" value="${(footHeight + lowerLegHeight + upperLegHeight + rotational_robot_holder_base_length_extra)*scale}" />
  <xacro:property name="rotational_robot_holder_base_radius" value="${0.2*scale}" />
  <xacro:property name="rotational_robot_holder_holder_radius" value="${0.01*scale}" />
  <xacro:property name="rotational_robot_holder_holder_length" value="${2*scale}" />
	<!-- <xacro:include filename="$(find gazebo_resources)/models/rotational_robot_holder/urdf/rotational_robot_holder.xacro" /> -->







  <link name="rotational_robot_holder_base">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${rotational_robot_holder_base_length}" radius="${rotational_robot_holder_base_radius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${rotational_robot_holder_base_length}" radius="${rotational_robot_holder_base_radius}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <mass value="10"/>
      <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
    </inertial>

  </link>

  <link name="rotational_robot_holder_virtual">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <sphere radius="0.01"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
    
  </link>

  <link name="rotational_robot_holder_holder">
    <collision>
      <origin xyz="${rotational_robot_holder_holder_length/2} 0 0" rpy="0 ${PI/2} 0"/>
      <geometry>
        <cylinder length="${rotational_robot_holder_holder_length}" radius="${rotational_robot_holder_holder_radius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="${rotational_robot_holder_holder_length/2} 0 0" rpy="0 ${PI/2} 0"/>
      <geometry>
         <cylinder length="${rotational_robot_holder_holder_length}" radius="${rotational_robot_holder_holder_radius}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
    
  </link>

  <!-- Robot to rotational_robot_holder -->

  <joint name="rotational_robot_holder_base_to_world" type="fixed">
    <parent link="world"/>
    <child link="rotational_robot_holder_base"/>
    <origin xyz="0 0 ${rotational_robot_holder_base_length/2}" rpy="0 0 0"/>
  </joint>


  <xacro:if value="${robot_floating is 1}">
    <joint name="rotational_robot_holder_virtual_to_holder" type="fixed">
      <parent link="rotational_robot_holder_base"/>
      <child link="rotational_robot_holder_virtual"/>
    </joint> 

    <joint name="rotational_robot_holder_joint" type="fixed">
      <parent link="rotational_robot_holder_virtual"/>
      <child link="rotational_robot_holder_holder"/>
      <origin xyz="0 0 ${rotational_robot_holder_base_length/2}" rpy="0 0 0"/>
    </joint>
  </xacro:if>

  <xacro:if value="${robot_floating is 0}">
    <joint name="rotational_robot_holder_virtual_to_holder" type="continuous">
      <parent link="rotational_robot_holder_base"/>
      <child link="rotational_robot_holder_virtual"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.7"/>
    </joint> 

    <joint name="rotational_robot_holder_joint" type="continuous">
      <parent link="rotational_robot_holder_virtual"/>
      <child link="rotational_robot_holder_holder"/>
      <origin xyz="0 0 ${rotational_robot_holder_base_length/2}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <dynamics damping="0.7"/>
    </joint>
  </xacro:if>

  <joint name="rotational_robot_holder_to_rotot" type="fixed">
    <parent link="rotational_robot_holder_holder"/>
    <child link="body"/>
    <origin xyz="${rotational_robot_holder_holder_length+bodyWidth/2} 0 0" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="30" velocity="1.0" lower="0" upper="1" />
  </joint> 


</robot>